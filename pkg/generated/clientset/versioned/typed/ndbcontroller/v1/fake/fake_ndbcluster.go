// Copyright (c) 2020, 2025, Oracle and/or its affiliates.
//
// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/mysql/ndb-operator/pkg/apis/ndbcontroller/v1"
	ndbcontrollerv1 "github.com/mysql/ndb-operator/pkg/generated/clientset/versioned/typed/ndbcontroller/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeNdbClusters implements NdbClusterInterface
type fakeNdbClusters struct {
	*gentype.FakeClientWithList[*v1.NdbCluster, *v1.NdbClusterList]
	Fake *FakeMysqlV1
}

func newFakeNdbClusters(fake *FakeMysqlV1, namespace string) ndbcontrollerv1.NdbClusterInterface {
	return &fakeNdbClusters{
		gentype.NewFakeClientWithList[*v1.NdbCluster, *v1.NdbClusterList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("ndbclusters"),
			v1.SchemeGroupVersion.WithKind("NdbCluster"),
			func() *v1.NdbCluster { return &v1.NdbCluster{} },
			func() *v1.NdbClusterList { return &v1.NdbClusterList{} },
			func(dst, src *v1.NdbClusterList) { dst.ListMeta = src.ListMeta },
			func(list *v1.NdbClusterList) []*v1.NdbCluster { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.NdbClusterList, items []*v1.NdbCluster) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
