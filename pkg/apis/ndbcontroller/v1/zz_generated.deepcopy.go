//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright (c) 2020, 2025, Oracle and/or its affiliates.
//
// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbCluster) DeepCopyInto(out *NdbCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbCluster.
func (in *NdbCluster) DeepCopy() *NdbCluster {
	if in == nil {
		return nil
	}
	out := new(NdbCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NdbCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbClusterCondition) DeepCopyInto(out *NdbClusterCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbClusterCondition.
func (in *NdbClusterCondition) DeepCopy() *NdbClusterCondition {
	if in == nil {
		return nil
	}
	out := new(NdbClusterCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbClusterList) DeepCopyInto(out *NdbClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NdbCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbClusterList.
func (in *NdbClusterList) DeepCopy() *NdbClusterList {
	if in == nil {
		return nil
	}
	out := new(NdbClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NdbClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbClusterPodSpec) DeepCopyInto(out *NdbClusterPodSpec) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(corev1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(corev1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbClusterPodSpec.
func (in *NdbClusterPodSpec) DeepCopy() *NdbClusterPodSpec {
	if in == nil {
		return nil
	}
	out := new(NdbClusterPodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbClusterSpec) DeepCopyInto(out *NdbClusterSpec) {
	*out = *in
	if in.ManagementNode != nil {
		in, out := &in.ManagementNode, &out.ManagementNode
		*out = new(NdbManagementNodeSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DataNode != nil {
		in, out := &in.DataNode, &out.DataNode
		*out = new(NdbDataNodeSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MysqlNode != nil {
		in, out := &in.MysqlNode, &out.MysqlNode
		*out = new(NdbMysqldSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbClusterSpec.
func (in *NdbClusterSpec) DeepCopy() *NdbClusterSpec {
	if in == nil {
		return nil
	}
	out := new(NdbClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbClusterStatus) DeepCopyInto(out *NdbClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]NdbClusterCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbClusterStatus.
func (in *NdbClusterStatus) DeepCopy() *NdbClusterStatus {
	if in == nil {
		return nil
	}
	out := new(NdbClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbDataNodeSpec) DeepCopyInto(out *NdbDataNodeSpec) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]*intstr.IntOrString, len(*in))
		for key, val := range *in {
			var outVal *intstr.IntOrString
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(intstr.IntOrString)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NdbPodSpec != nil {
		in, out := &in.NdbPodSpec, &out.NdbPodSpec
		*out = new(NdbClusterPodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PVCSpec != nil {
		in, out := &in.PVCSpec, &out.PVCSpec
		*out = new(corev1.PersistentVolumeClaimSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbDataNodeSpec.
func (in *NdbDataNodeSpec) DeepCopy() *NdbDataNodeSpec {
	if in == nil {
		return nil
	}
	out := new(NdbDataNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbManagementNodeSpec) DeepCopyInto(out *NdbManagementNodeSpec) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]*intstr.IntOrString, len(*in))
		for key, val := range *in {
			var outVal *intstr.IntOrString
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(intstr.IntOrString)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NdbPodSpec != nil {
		in, out := &in.NdbPodSpec, &out.NdbPodSpec
		*out = new(NdbClusterPodSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbManagementNodeSpec.
func (in *NdbManagementNodeSpec) DeepCopy() *NdbManagementNodeSpec {
	if in == nil {
		return nil
	}
	out := new(NdbManagementNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NdbMysqldSpec) DeepCopyInto(out *NdbMysqldSpec) {
	*out = *in
	if in.NdbPodSpec != nil {
		in, out := &in.NdbPodSpec, &out.NdbPodSpec
		*out = new(NdbClusterPodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.PVCSpec != nil {
		in, out := &in.PVCSpec, &out.PVCSpec
		*out = new(corev1.PersistentVolumeClaimSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NdbMysqldSpec.
func (in *NdbMysqldSpec) DeepCopy() *NdbMysqldSpec {
	if in == nil {
		return nil
	}
	out := new(NdbMysqldSpec)
	in.DeepCopyInto(out)
	return out
}
